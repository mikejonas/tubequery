// app/routes/result.tsx
import React, { useState, useEffect, useRef } from "react";
import { Button } from "~/components/ui/button";
import { ArrowRight } from "lucide-react";
import { useSearchParams } from "@remix-run/react";
import ReactMarkdown from "react-markdown";

export default function Result() {
  const [summary, setSummary] = useState("");
  const [question, setQuestion] = useState("");
  const [loading, setLoading] = useState(false);
  const [chat, setChat] = useState<{ question: string; answer: string }[]>([]);
  const textareaRef = useRef<HTMLTextAreaElement>(null);
  const [searchParams] = useSearchParams();
  const url = searchParams.get("url");

  const [pendingQuestion, setPendingQuestion] = useState<string | null>(null);

  useEffect(() => {
    if (url) {
      setLoading(true);
      setTimeout(() => {
        setSummary(
          "### Overview of Space Exploration\n\nSpace exploration has significantly advanced over the past few decades, leading to numerous discoveries and technological innovations. This summary outlines key milestones, current missions, and future prospects in the field of space exploration.\n\n### Major Milestones in Space Exploration\n\n1. **The Space Race**\n   - The competition between the United States and the Soviet Union led to significant achievements, such as the launch of Sputnik in 1957, the first artificial satellite [0:15].\n   - The Apollo 11 mission in 1969 resulted in humans landing on the Moon, marking a monumental achievement in human space exploration [0:30].\n\n2. **International Space Station (ISS)**\n   - Launched in 1998, the ISS serves as a laboratory for scientific research and international cooperation in space [1:00].\n   - The station has hosted astronauts from various countries, emphasizing the collaborative spirit of space exploration [1:20].\n\n### Current Missions and Technologies\n\n1. **Mars Exploration**\n   - NASA's Perseverance rover, launched in 2020, is exploring the Martian surface to search for signs of past life and collect samples [2:15].\n   - The Mars Helicopter, Ingenuity, has successfully performed flight tests, demonstrating the potential for powered flight on other planets [2:45].\n\n2. **Commercial Spaceflight**\n   - Companies like SpaceX and Blue Origin are pioneering commercial space travel, with successful crewed missions to the ISS [3:10].\n   - SpaceX's Starship aims to facilitate human missions to Mars and beyond [3:30].\n\n### Future Prospects\n\n1. **Artemis Program**\n   - NASA's Artemis program aims to return humans to the Moon by 2024, focusing on sustainable exploration and preparation for human missions to Mars [4:00].\n   - The program includes the development of the Lunar Gateway, a space station orbiting the Moon [4:20].\n\n2. **Interstellar Exploration**\n   - Concepts for interstellar missions, such as the Breakthrough Starshot initiative, aim to send tiny spacecraft to nearby star systems within decades [5:00].\n   - Research into advanced propulsion technologies could pave the way for future deep-space missions [5:30].\n\n### Conclusion\n\nSpace exploration continues to evolve, driven by both governmental and commercial efforts. The advancements in technology and international collaboration hold great promise for uncovering the mysteries of our universe. As we look to the future, the"
        );
        setLoading(false);
      }, 2000);
    }
  }, [url]);

  useEffect(() => {
    if (textareaRef.current) {
      textareaRef.current.style.height = "auto";
      textareaRef.current.style.height =
        textareaRef.current.scrollHeight + "px";
    }
  }, [question]);

  const handleQuestion = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!question.trim()) return;
    setLoading(true);
    const currentQuestion = question;
    setPendingQuestion(currentQuestion);
    setQuestion("");

    setTimeout(() => {
      const newAnswer = `This is a mock answer to your question: "${currentQuestion}". In a real implementation, this would be generated by an LLM based on the video content.`;
      setChat((prev) => [
        ...prev,
        { question: currentQuestion, answer: newAnswer },
      ]);
      setPendingQuestion(null);
      setLoading(false);
    }, 1500);
  };

  const handleKeyDown = (e: React.KeyboardEvent) => {
    if (e.key === "Enter" && !e.shiftKey) {
      e.preventDefault();
      handleQuestion(e);
    }
  };

  return (
    <div className="container mx-auto p-4 sm:p-6 flex flex-col h-screen dark:bg-zinc-900">
      <h1 className="text-3xl font-bold text-center mb-8 dark:text-white">
        TubeQuery Result
      </h1>

      {summary && (
        <div className="flex-grow overflow-y-auto space-y-4 mb-4">
          <p className="bg-zinc-100 dark:bg-zinc-800 p-4 rounded dark:text-white">
            <ReactMarkdown className="prose prose-sm prose-slate dark:prose-invert">
              {summary}
            </ReactMarkdown>
          </p>

          <div className="space-y-4">
            {chat.map((item, index) => (
              <div key={index} className="space-y-2">
                <p className="bg-blue-100 dark:bg-blue-900 p-3 rounded dark:text-white">
                  {item.question}
                </p>
                <p className="bg-zinc-100 dark:bg-zinc-800 p-3 rounded dark:text-white">
                  {item.answer}
                </p>
              </div>
            ))}
            {pendingQuestion && (
              <div className="space-y-2">
                <p className="bg-blue-100 dark:bg-blue-900 p-3 rounded dark:text-white">
                  {pendingQuestion}
                </p>
                <p className="bg-zinc-100 dark:bg-zinc-800 p-3 rounded animate-pulse dark:text-white">
                  Loading...
                </p>
              </div>
            )}
          </div>
        </div>
      )}

      <form onSubmit={handleQuestion} className="mt-auto">
        <div className="relative border rounded-md focus-within:ring-2 focus-within:ring-blue-500 focus-within:border-blue-500 dark:border-zinc-700">
          <textarea
            ref={textareaRef}
            className="w-full p-2 pr-11 rounded-md resize-none overflow-hidden focus:outline-none flex items-center bg-white text-black dark:bg-zinc-800 dark:text-white"
            placeholder="Ask a question about the video"
            value={question}
            onChange={(e) => setQuestion(e.target.value)}
            onKeyDown={handleKeyDown}
            rows={1}
            style={{
              minHeight: "2.5rem",
              maxHeight: "10rem",
              overflowY: "auto",
              display: "flex",
              alignItems: "center",
            }}
          />
          <Button
            type="submit"
            disabled={loading}
            className="absolute right-1.5 bottom-1 w-8 h-8 p-0 flex items-center justify-center bg-black text-white hover:bg-zinc-800 rounded-sm dark:bg-white dark:text-black dark:hover:bg-zinc-200"
            aria-label="Submit question"
          >
            {loading ? (
              <span className="animate-spin">‚è≥</span>
            ) : (
              <ArrowRight className="h-4 w-4" />
            )}
          </Button>
        </div>
      </form>
    </div>
  );
}
